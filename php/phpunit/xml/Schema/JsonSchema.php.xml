<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="JsonSchema.php" path="/Schema">
    <totals>
      <lines total="35" comments="8" code="27" executable="3" executed="3" percent="100.00"/>
      <methods count="2" tested="2" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="myrpc\Schema\JsonSchema" start="15" executable="3" executed="3" crap="2">
      <namespace name="myrpc\Schema"/>
      <method name="__construct" signature="__construct(array $jsonSchema)" start="18" end="20" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="__toString" signature="__toString(): string" start="25" end="33" crap="1" executable="2" executed="2" coverage="100"/>
    </class>
    <coverage>
      <line nr="20">
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;input5or6&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputBool&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputDate&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputEnum2&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputFloat&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputInt&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputNamedArguments&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputNull&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputString&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputStringBetween1And5Characters&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputUUIDorEmail&quot;"/>
      </line>
      <line nr="28">
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;input5or6&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputBool&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputDate&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputEnum2&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputFloat&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputInt&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputNamedArguments&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputNull&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputString&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputStringBetween1And5Characters&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputUUIDorEmail&quot;"/>
      </line>
      <line nr="32">
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;input5or6&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputBool&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputDate&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputEnum2&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputFloat&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputInt&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputNamedArguments&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputNull&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputString&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputStringBetween1And5Characters&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleSchemaGeneration with data set &quot;inputUUIDorEmail&quot;"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">myrpc\Schema</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">assert</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_string</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">json_encode</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JSON_THROW_ON_ERROR</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11"/>
      <line no="12">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="13">
        <token name="T_DOC_COMMENT"> * @see https://json-schema.org/understanding-json-schema/reference/generic.html</token>
      </line>
      <line no="14">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="15">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JsonSchema</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SchemaInterface</token>
      </line>
      <line no="16">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="17"/>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jsonSchema</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="21"/>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT">     * @throws \JsonException</token>
      </line>
      <line no="24">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__toString</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/** @psalm-suppress RedundantConditionGivenDocblockType */</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$encoded</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">json_encode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">jsonSchema</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JSON_THROW_ON_ERROR</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/** @psalm-suppress RedundantConditionGivenDocblockType */</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">assert</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$encoded</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31"/>
      <line no="32">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$encoded</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="34">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="35"/>
    </source>
  </file>
</phpunit>
