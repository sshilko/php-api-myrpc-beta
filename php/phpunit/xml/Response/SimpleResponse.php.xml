<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="SimpleResponse.php" path="/Response">
    <totals>
      <lines total="40" comments="3" code="37" executable="5" executed="4" percent="80.00"/>
      <methods count="5" tested="4" percent="80.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="myrpc\Response\SimpleResponse" start="7" executable="5" executed="4" crap="5.2">
      <namespace name="myrpc\Response"/>
      <method name="__construct" signature="__construct(object|array|bool|float|int|string|null $response, ?string $requestId, ?int $errorId)" start="10" end="15" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="isSuccess" signature="isSuccess(): bool" start="17" end="20" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getResponse" signature="getResponse(): object|array|bool|float|int|string|null" start="25" end="28" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getError" signature="getError(): ?int" start="30" end="33" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getRequestId" signature="getRequestId(): ?string" start="35" end="38" crap="2" executable="1" executed="0" coverage="0"/>
    </class>
    <coverage>
      <line nr="15">
        <covered by="phpunit\BasicHandlerTest::testSimpleRequestResponseHandler with data set &quot;getArguments-1&quot;"/>
        <covered by="phpunit\BasicHandlerTest::testSimpleRequestResponseHandler with data set &quot;getArguments-2&quot;"/>
        <covered by="phpunit\BasicHandlerTest::testSimpleRequestResponseHandler with data set &quot;getArguments-3&quot;"/>
        <covered by="phpunit\BasicHandlerTest::testSimpleRequestResponseHandler with data set &quot;getArguments-4&quot;"/>
        <covered by="phpunit\BasicHandlerTest::testSimpleRequestResponseHandler with data set &quot;getArray&quot;"/>
        <covered by="phpunit\BasicHandlerTest::testSimpleRequestResponseHandler with data set &quot;getBool&quot;"/>
        <covered by="phpunit\BasicHandlerTest::testSimpleRequestResponseHandler with data set &quot;getError&quot;"/>
        <covered by="phpunit\BasicHandlerTest::testSimpleRequestResponseHandler with data set &quot;getErrorNull&quot;"/>
        <covered by="phpunit\BasicHandlerTest::testSimpleRequestResponseHandler with data set &quot;getFloat&quot;"/>
        <covered by="phpunit\BasicHandlerTest::testSimpleRequestResponseHandler with data set &quot;getIdentityToken&quot;"/>
        <covered by="phpunit\BasicHandlerTest::testSimpleRequestResponseHandler with data set &quot;getInt&quot;"/>
        <covered by="phpunit\BasicHandlerTest::testSimpleRequestResponseHandler with data set &quot;getNull&quot;"/>
        <covered by="phpunit\BasicHandlerTest::testSimpleRequestResponseHandler with data set &quot;getString&quot;"/>
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getArray&quot;"/>
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getBool&quot;"/>
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getError&quot;"/>
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getErrorNull&quot;"/>
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getFloat&quot;"/>
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getInt&quot;"/>
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getMyIdentity&quot;"/>
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getNull&quot;"/>
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getString&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testDatatypesRequestResponseHandler with data set &quot;inputCustomDatatype but incomplete payload provided as input&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testDatatypesRequestResponseHandler with data set &quot;inputCustomDatatype with optional and nullable property returns OK&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testDatatypesRequestResponseHandler with data set &quot;inputCustomDatatype&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testDatatypesRequestResponseHandler with data set &quot;inputCustomDatatype with attributes validation using Symfony validator loadValidatorMetadata&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testDatatypesRequestResponseHandler with data set &quot;inputCustomDatatype with attributes validation using Symfony validator attributes&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;input5or6&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputBool&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputDate&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputEnum2&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputFloat&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputInt&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputNamedArguments&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputNull&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputString&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputStringBetween1And5Characters&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputUUIDorEmail&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleMethodValidations with data set &quot;inputArray&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleMethodValidations with data set &quot;inputEnum1&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleMethodValidations with data set &quot;inputEnum2&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleMethodValidations with data set &quot;inputIntOrString&quot;"/>
      </line>
      <line nr="19">
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getArray&quot;"/>
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getBool&quot;"/>
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getError&quot;"/>
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getErrorNull&quot;"/>
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getFloat&quot;"/>
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getInt&quot;"/>
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getMyIdentity&quot;"/>
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getNull&quot;"/>
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getString&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testDatatypesRequestResponseHandler with data set &quot;inputCustomDatatype but incomplete payload provided as input&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testDatatypesRequestResponseHandler with data set &quot;inputCustomDatatype with optional and nullable property returns OK&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testDatatypesRequestResponseHandler with data set &quot;inputCustomDatatype&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testDatatypesRequestResponseHandler with data set &quot;inputCustomDatatype with attributes validation using Symfony validator loadValidatorMetadata&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testDatatypesRequestResponseHandler with data set &quot;inputCustomDatatype with attributes validation using Symfony validator attributes&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;input5or6&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputBool&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputDate&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputEnum2&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputFloat&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputInt&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputNamedArguments&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputNull&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputString&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputStringBetween1And5Characters&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputUUIDorEmail&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleMethodValidations with data set &quot;inputArray&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleMethodValidations with data set &quot;inputEnum1&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleMethodValidations with data set &quot;inputEnum2&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleMethodValidations with data set &quot;inputIntOrString&quot;"/>
      </line>
      <line nr="27">
        <covered by="phpunit\BasicHandlerTest::testSimpleRequestResponseHandler with data set &quot;getArguments-1&quot;"/>
        <covered by="phpunit\BasicHandlerTest::testSimpleRequestResponseHandler with data set &quot;getArguments-2&quot;"/>
        <covered by="phpunit\BasicHandlerTest::testSimpleRequestResponseHandler with data set &quot;getArguments-3&quot;"/>
        <covered by="phpunit\BasicHandlerTest::testSimpleRequestResponseHandler with data set &quot;getArguments-4&quot;"/>
        <covered by="phpunit\BasicHandlerTest::testSimpleRequestResponseHandler with data set &quot;getArray&quot;"/>
        <covered by="phpunit\BasicHandlerTest::testSimpleRequestResponseHandler with data set &quot;getBool&quot;"/>
        <covered by="phpunit\BasicHandlerTest::testSimpleRequestResponseHandler with data set &quot;getError&quot;"/>
        <covered by="phpunit\BasicHandlerTest::testSimpleRequestResponseHandler with data set &quot;getErrorNull&quot;"/>
        <covered by="phpunit\BasicHandlerTest::testSimpleRequestResponseHandler with data set &quot;getFloat&quot;"/>
        <covered by="phpunit\BasicHandlerTest::testSimpleRequestResponseHandler with data set &quot;getIdentityToken&quot;"/>
        <covered by="phpunit\BasicHandlerTest::testSimpleRequestResponseHandler with data set &quot;getInt&quot;"/>
        <covered by="phpunit\BasicHandlerTest::testSimpleRequestResponseHandler with data set &quot;getNull&quot;"/>
        <covered by="phpunit\BasicHandlerTest::testSimpleRequestResponseHandler with data set &quot;getString&quot;"/>
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getArray&quot;"/>
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getBool&quot;"/>
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getError&quot;"/>
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getErrorNull&quot;"/>
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getFloat&quot;"/>
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getInt&quot;"/>
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getMyIdentity&quot;"/>
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getNull&quot;"/>
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getString&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testDatatypesRequestResponseHandler with data set &quot;inputCustomDatatype but incomplete payload provided as input&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testDatatypesRequestResponseHandler with data set &quot;inputCustomDatatype with optional and nullable property returns OK&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testDatatypesRequestResponseHandler with data set &quot;inputCustomDatatype&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testDatatypesRequestResponseHandler with data set &quot;inputCustomDatatype with attributes validation using Symfony validator loadValidatorMetadata&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testDatatypesRequestResponseHandler with data set &quot;inputCustomDatatype with attributes validation using Symfony validator attributes&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;input5or6&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputBool&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputDate&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputEnum2&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputFloat&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputInt&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputNamedArguments&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputNull&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputString&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputStringBetween1And5Characters&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleRequestResponseHandler with data set &quot;inputUUIDorEmail&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleMethodValidations with data set &quot;inputArray&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleMethodValidations with data set &quot;inputEnum1&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleMethodValidations with data set &quot;inputEnum2&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleMethodValidations with data set &quot;inputIntOrString&quot;"/>
      </line>
      <line nr="32">
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getError&quot;"/>
        <covered by="phpunit\BasicWorkerTest::testSimpleRequestResponseHandler with data set &quot;getErrorNull&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testDatatypesRequestResponseHandler with data set &quot;inputCustomDatatype but incomplete payload provided as input&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testDatatypesRequestResponseHandler with data set &quot;inputCustomDatatype with attributes validation using Symfony validator loadValidatorMetadata&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testDatatypesRequestResponseHandler with data set &quot;inputCustomDatatype with attributes validation using Symfony validator attributes&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleMethodValidations with data set &quot;inputArray&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleMethodValidations with data set &quot;inputEnum1&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleMethodValidations with data set &quot;inputEnum2&quot;"/>
        <covered by="phpunit\NormalWorkerTest::testSimpleMethodValidations with data set &quot;inputIntOrString&quot;"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">myrpc\Response</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SimpleResponse</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ResponseInterface</token>
      </line>
      <line no="8">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="9"/>
      <line no="10">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="11">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">object</token>
        <token name="T_PIPE">|</token>
        <token name="T_ARRAY">array</token>
        <token name="T_PIPE">|</token>
        <token name="T_STRING">bool</token>
        <token name="T_PIPE">|</token>
        <token name="T_STRING">float</token>
        <token name="T_PIPE">|</token>
        <token name="T_STRING">int</token>
        <token name="T_PIPE">|</token>
        <token name="T_STRING">string</token>
        <token name="T_PIPE">|</token>
        <token name="T_STRING">null</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="12">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$requestId</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="13">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errorId</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="16"/>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">isSuccess</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errorId</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="21"/>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT">     * @throws \myrpc\Exception\ServiceException</token>
      </line>
      <line no="24">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getResponse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">object</token>
        <token name="T_PIPE">|</token>
        <token name="T_ARRAY">array</token>
        <token name="T_PIPE">|</token>
        <token name="T_STRING">bool</token>
        <token name="T_PIPE">|</token>
        <token name="T_STRING">float</token>
        <token name="T_PIPE">|</token>
        <token name="T_STRING">int</token>
        <token name="T_PIPE">|</token>
        <token name="T_STRING">string</token>
        <token name="T_PIPE">|</token>
        <token name="T_STRING">null</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">response</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="29"/>
      <line no="30">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getError</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">int</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errorId</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="34"/>
      <line no="35">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getRequestId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">requestId</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="39">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="40"/>
    </source>
  </file>
</phpunit>
